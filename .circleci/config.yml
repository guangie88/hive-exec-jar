version: 2
jobs:
  build:
    docker:
    - image: maven:3-jdk-8-alpine
    environment:
      MAVEN_THREAD_COUNT: "1"
      GPG_REAL_NAME: Chen Weiguang
      GPG_EMAIL: chen.weiguang@gmail.com
    steps:
    - run:
        name: Install git and gnupg
        command: |
          apk add --no-cache \
            git \
            gnupg
    - run:
        name: Create default gpg keypair and expose the public key
        command: |
          cat >specs <<EOF
            %echo Generating a default key
            Key-Type: default
            Subkey-Type: default
            Name-Real: ${GPG_REAL_NAME}
            Name-Email: ${GPG_EMAIL}
            Expire-Date: 0
            %no-protection
            %commit
            %echo done
          EOF
          gpg --batch --generate-key specs
          gpg -a --export "${GPG_REAL_NAME}"
    - run:
        name: Fetch repo with modified Hive for Spark that allows for Hadoop 3.y.z
        command: |
          git clone https://github.com/guangie88/hive.git -b release-1.2.1-spark2-allow-hadoop3 --depth 1
    - run:
        name: Perform Maven build (and prevent weird GPG problems)
        command: |
          echo "allow-loopback-pinentry" > ${HOME}/.gnupg/gpg-agent.conf
          echo "pinentry-mode loopback" > ${HOME}/.gnupg/gpg.conf
          cd hive
          mvn -T ${MAVEN_THREAD_COUNT} install -Phadoop-2 -DskipTests
    - run:
        name: Copy target JAR as artifact
        command: |
          cp ./ql/target/hive-exec-1.2.1.spark2.jar /tmp/artifacts/
    - persist_to_workspace:
        root: /tmp/artifacts
        paths:
        - hive-exec-1.2.1.spark2.jar
    
  publish:
    machine: true
    environment:
      RELEASE_TAG: 1.2.1.spark2-hadoop3
    steps:
    - attach_workspace:
        at: /tmp/artifacts
    - run:
        name: Install ghr
        command: |
          wget https://github.com/tcnksm/ghr/releases/download/v0.12.0/ghr_v0.12.0_linux_amd64.tar.gz
          tar xvf ghr_v0.12.0_linux_amd64.tar.gz
          mv ghr_v0.12.0_linux_amd64/ghr /usr/local/bin/
    - run:
        name: Publish target JAR for GitHub release
        command: |
          ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${RELEASE_TAG} /tmp/artifacts/
            
workflows:
  version: 2
  build_only:
    jobs:
    - build:
        filters:
          branches:
            only:
            - /^(?!pull\/).*$/
  publish_only:
    jobs:
    - publish:
        filters:
          branches:
            only:
            - master
